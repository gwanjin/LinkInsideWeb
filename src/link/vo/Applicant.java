package link.vo;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 개인유저 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Applicant implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** APPLICANTID. */
	private String applicantid;

	/** APPLICANTFIRST. */
	private String applicantfirst;

	/** APPLICANTLAST. */
	private String applicantlast;

	/** APPLICANTPHONE. */
	private String applicantphone;

	/** APPLICANTPASSWORD. */
	private String applicantpassword;

	/** APPLICANTBDAY. */
	private String applicantbday;

	/** APPLICANTGENDER. */
	private String applicantgender;

	/** APPLICANTVALID. */
	private String applicantvalid;

	/** CULTURE 목록. */
	private Set<Culture> cultureSet;

	/** EDUCATION 목록. */
	private Set<Education> educationSet;

	/** Experience 목록. */
	private Set<Experience> experienceSet;

	/** MATCHING 목록. */
	private Set<Matching> matchingSet;

	/** PERSONALITY 목록. */
	private Set<Personality> personalitySet;

	/** 새 테이블 목록. */
	private Set<Skills> skillsSet;

	/**
	 * 생성자.
	 */
	


	/**
	 * APPLICANTID을 설정합니다..
	 * 
	 * @param applicantid
	 *            APPLICANTID
	 */
	public Applicant(){
		
	}

	public Applicant(String applicantid, String applicantfirst, String applicantlast, String applicantphone,
			String applicantpassword, String applicantbday, String applicantgender, String applicantvalid) {
		super();
		this.applicantid = applicantid;
		this.applicantfirst = applicantfirst;
		this.applicantlast = applicantlast;
		this.applicantphone = applicantphone;
		this.applicantpassword = applicantpassword;
		this.applicantbday = applicantbday;
		this.applicantgender = applicantgender;
		this.applicantvalid = applicantvalid;
	}
	
	public void setApplicantid(String applicantid) {
		this.applicantid = applicantid;
	}

	/**
	 * APPLICANTID을 가져옵니다..
	 * 
	 * @return APPLICANTID
	 */
	public String getApplicantid() {
		return this.applicantid;
	}

	/**
	 * APPLICANTFIRST을 설정합니다..
	 * 
	 * @param applicantfirst
	 *            APPLICANTFIRST
	 */
	public void setApplicantfirst(String applicantfirst) {
		this.applicantfirst = applicantfirst;
	}

	/**
	 * APPLICANTFIRST을 가져옵니다..
	 * 
	 * @return APPLICANTFIRST
	 */
	public String getApplicantfirst() {
		return this.applicantfirst;
	}

	/**
	 * APPLICANTLAST을 설정합니다..
	 * 
	 * @param applicantlast
	 *            APPLICANTLAST
	 */
	public void setApplicantlast(String applicantlast) {
		this.applicantlast = applicantlast;
	}

	/**
	 * APPLICANTLAST을 가져옵니다..
	 * 
	 * @return APPLICANTLAST
	 */
	public String getApplicantlast() {
		return this.applicantlast;
	}

	/**
	 * APPLICANTPHONE을 설정합니다..
	 * 
	 * @param applicantphone
	 *            APPLICANTPHONE
	 */
	public void setApplicantphone(String applicantphone) {
		this.applicantphone = applicantphone;
	}

	/**
	 * APPLICANTPHONE을 가져옵니다..
	 * 
	 * @return APPLICANTPHONE
	 */
	public String getApplicantphone() {
		return this.applicantphone;
	}

	/**
	 * APPLICANTPASSWORD을 설정합니다..
	 * 
	 * @param applicantpassword
	 *            APPLICANTPASSWORD
	 */
	public void setApplicantpassword(String applicantpassword) {
		this.applicantpassword = applicantpassword;
	}

	/**
	 * APPLICANTPASSWORD을 가져옵니다..
	 * 
	 * @return APPLICANTPASSWORD
	 */
	public String getApplicantpassword() {
		return this.applicantpassword;
	}

	/**
	 * APPLICANTBDAY을 설정합니다..
	 * 
	 * @param applicantbday
	 *            APPLICANTBDAY
	 */
	public void setApplicantbday(String applicantbday) {
		this.applicantbday = applicantbday;
	}

	/**
	 * APPLICANTBDAY을 가져옵니다..
	 * 
	 * @return APPLICANTBDAY
	 */
	public String getApplicantbday() {
		return this.applicantbday;
	}

	/**
	 * APPLICANTGENDER을 설정합니다..
	 * 
	 * @param applicantgender
	 *            APPLICANTGENDER
	 */
	public void setApplicantgender(String applicantgender) {
		this.applicantgender = applicantgender;
	}

	/**
	 * APPLICANTGENDER을 가져옵니다..
	 * 
	 * @return APPLICANTGENDER
	 */
	public String getApplicantgender() {
		return this.applicantgender;
	}

	/**
	 * APPLICANTVALID을 설정합니다..
	 * 
	 * @param applicantvalid
	 *            APPLICANTVALID
	 */
	public void setApplicantvalid(String applicantvalid) {
		this.applicantvalid = applicantvalid;
	}

	/**
	 * APPLICANTVALID을 가져옵니다..
	 * 
	 * @return APPLICANTVALID
	 */
	public String getApplicantvalid() {
		return this.applicantvalid;
	}

	/**
	 * CULTURE 목록을 설정합니다..
	 * 
	 * @param cultureSet
	 *            CULTURE 목록
	 */
	public void setCultureSet(Set<Culture> cultureSet) {
		this.cultureSet = cultureSet;
	}

	/**
	 * CULTURE를 추가합니다..
	 * 
	 * @param culture
	 *            CULTURE
	 */
	public void addCulture(Culture culture) {
		this.cultureSet.add(culture);
	}

	/**
	 * CULTURE 목록을 가져옵니다..
	 * 
	 * @return CULTURE 목록
	 */
	public Set<Culture> getCultureSet() {
		return this.cultureSet;
	}

	/**
	 * EDUCATION 목록을 설정합니다..
	 * 
	 * @param educationSet
	 *            EDUCATION 목록
	 */
	public void setEducationSet(Set<Education> educationSet) {
		this.educationSet = educationSet;
	}

	/**
	 * EDUCATION를 추가합니다..
	 * 
	 * @param education
	 *            EDUCATION
	 */
	public void addEducation(Education education) {
		this.educationSet.add(education);
	}

	/**
	 * EDUCATION 목록을 가져옵니다..
	 * 
	 * @return EDUCATION 목록
	 */
	public Set<Education> getEducationSet() {
		return this.educationSet;
	}

	/**
	 * Experience 목록을 설정합니다..
	 * 
	 * @param experienceSet
	 *            Experience 목록
	 */
	public void setExperienceSet(Set<Experience> experienceSet) {
		this.experienceSet = experienceSet;
	}

	/**
	 * Experience를 추가합니다..
	 * 
	 * @param experience
	 *            Experience
	 */
	public void addExperience(Experience experience) {
		this.experienceSet.add(experience);
	}

	/**
	 * Experience 목록을 가져옵니다..
	 * 
	 * @return Experience 목록
	 */
	public Set<Experience> getExperienceSet() {
		return this.experienceSet;
	}

	/**
	 * MATCHING 목록을 설정합니다..
	 * 
	 * @param matchingSet
	 *            MATCHING 목록
	 */
	public void setMatchingSet(Set<Matching> matchingSet) {
		this.matchingSet = matchingSet;
	}

	/**
	 * MATCHING를 추가합니다..
	 * 
	 * @param matching
	 *            MATCHING
	 */
	public void addMatching(Matching matching) {
		this.matchingSet.add(matching);
	}

	/**
	 * MATCHING 목록을 가져옵니다..
	 * 
	 * @return MATCHING 목록
	 */
	public Set<Matching> getMatchingSet() {
		return this.matchingSet;
	}

	/**
	 * PERSONALITY 목록을 설정합니다..
	 * 
	 * @param personalitySet
	 *            PERSONALITY 목록
	 */
	public void setPersonalitySet(Set<Personality> personalitySet) {
		this.personalitySet = personalitySet;
	}

	/**
	 * PERSONALITY를 추가합니다..
	 * 
	 * @param personality
	 *            PERSONALITY
	 */
	public void addPersonality(Personality personality) {
		this.personalitySet.add(personality);
	}

	/**
	 * PERSONALITY 목록을 가져옵니다..
	 * 
	 * @return PERSONALITY 목록
	 */
	public Set<Personality> getPersonalitySet() {
		return this.personalitySet;
	}

	/**
	 * 새 테이블 목록을 설정합니다..
	 * 
	 * @param skillsSet
	 *            새 테이블 목록
	 */
	public void setSkillsSet(Set<Skills> skillsSet) {
		this.skillsSet = skillsSet;
	}

	/**
	 * 새 테이블를 추가합니다..
	 * 
	 * @param skills
	 *            새 테이블
	 */
	public void addSkills(Skills skills) {
		this.skillsSet.add(skills);
	}

	/**
	 * 새 테이블 목록을 가져옵니다..
	 * 
	 * @return 새 테이블 목록
	 */
	public Set<Skills> getSkillsSet() {
		return this.skillsSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((applicantid == null) ? 0 : applicantid.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Applicant other = (Applicant) obj;
		if (applicantid == null) {
			if (other.applicantid != null) {
				return false;
			}
		} else if (!applicantid.equals(other.applicantid)) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "Applicant [applicantid=" + applicantid + ", applicantfirst=" + applicantfirst + ", applicantlast="
				+ applicantlast + ", applicantphone=" + applicantphone + ", applicantpassword=" + applicantpassword
				+ ", applicantbday=" + applicantbday + ", applicantgender=" + applicantgender + ", applicantvalid="
				+ applicantvalid + ", cultureSet=" + cultureSet + ", educationSet=" + educationSet + ", experienceSet="
				+ experienceSet + ", matchingSet=" + matchingSet + ", personalitySet=" + personalitySet + ", skillsSet="
				+ skillsSet + "]";
	}

}
