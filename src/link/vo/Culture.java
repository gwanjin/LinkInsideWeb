package link.vo;

import java.io.Serializable;

/**
 * CULTURE 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Culture implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** CULTUREID. */
	private String cultureid;

	/** 개인유저. */
	private String applicantid;

	/** COMPANY. */
	private String compid;

	/** NEEDHARMONY. */
	private Double needharmony;

	/** NEEDCuriosity. */
	private Double needcuriosity;

	/** NEEDIdeal. */
	private Double needideal;

	/** NEEDCloseness. */
	private Double needcloseness;

	/** NEEDSelfExpression. */
	private Double needselfexpression;

	/** NEEDLiberty. */
	private Double needliberty;

	/** NEEDLove. */
	private Double needlove;

	/** NEEDPracticality. */
	private Double needpracticality;

	/** NEEDStability. */
	private Double needstability;

	/** NEEDChallenge. */
	private Double needchallenge;

	/** NEEDStructure. */
	private Double needstructure;

	/** VALUESELF. */
	private Double valueself;

	/** VALUECONSERVATION. */
	private Double valueconservation;

	/** VALUEHEDONISM. */
	private Double valuehedonism;

	/** VALUEENHANCEMENT. */
	private Double valueenhancement;

	/** VALUEOPEN. */
	private Double valueopen;

	/**
	 * 생성자.
	 */
	public Culture() {
		
	}
	
	

	public Culture(String cultureid, String applicantid, String compid, Double needharmony, Double needcuriosity,
			Double needideal, Double needcloseness, Double needselfexpression, Double needliberty, Double needlove,
			Double needpracticality, Double needstability, Double needchallenge, Double needstructure, Double valueself,
			Double valueconservation, Double valuehedonism, Double valueenhancement, Double valueopen) {
		super();
		this.cultureid = cultureid;
		this.applicantid = applicantid;
		this.compid = compid;
		this.needharmony = needharmony;
		this.needcuriosity = needcuriosity;
		this.needideal = needideal;
		this.needcloseness = needcloseness;
		this.needselfexpression = needselfexpression;
		this.needliberty = needliberty;
		this.needlove = needlove;
		this.needpracticality = needpracticality;
		this.needstability = needstability;
		this.needchallenge = needchallenge;
		this.needstructure = needstructure;
		this.valueself = valueself;
		this.valueconservation = valueconservation;
		this.valuehedonism = valuehedonism;
		this.valueenhancement = valueenhancement;
		this.valueopen = valueopen;
	}



	/**
	 * CULTUREID을 설정합니다..
	 * 
	 * @param cultureid
	 *            CULTUREID
	 */
	public void setCultureid(String cultureid) {
		this.cultureid = cultureid;
	}

	/**
	 * CULTUREID을 가져옵니다..
	 * 
	 * @return CULTUREID
	 */
	public String getCultureid() {
		return this.cultureid;
	}

	/**
	 * 개인유저을 설정합니다..
	 * 
	 * @param applicant
	 *            개인유저
	 */
	public void setApplicantid(String applicantid) {
		this.applicantid = applicantid;
	}

	/**
	 * 개인유저을 가져옵니다..
	 * 
	 * @return 개인유저
	 */
	public String getApplicantid() {
		return this.applicantid;
	}

	/**
	 * COMPID을 설정합니다..
	 * 
	 * @param String
	 *            COMPID
	 */
	public void setCompid(String compid) {
		this.compid = compid;
	}

	/**
	 * COMPID을 가져옵니다..
	 * 
	 * @return String
	 */
	public String getCompid() {
		return this.compid;
	}

	/**
	 * NEEDHARMONY을 설정합니다..
	 * 
	 * @param needharmony
	 *            NEEDHARMONY
	 */
	public void setNeedharmony(Double needharmony) {
		this.needharmony = needharmony;
	}

	/**
	 * NEEDHARMONY을 가져옵니다..
	 * 
	 * @return NEEDHARMONY
	 */
	public Double getNeedharmony() {
		return this.needharmony;
	}

	/**
	 * NEEDCuriosity을 설정합니다..
	 * 
	 * @param needcuriosity
	 *            NEEDCuriosity
	 */
	public void setNeedcuriosity(Double needcuriosity) {
		this.needcuriosity = needcuriosity;
	}

	/**
	 * NEEDCuriosity을 가져옵니다..
	 * 
	 * @return NEEDCuriosity
	 */
	public Double getNeedcuriosity() {
		return this.needcuriosity;
	}

	/**
	 * NEEDIdeal을 설정합니다..
	 * 
	 * @param needideal
	 *            NEEDIdeal
	 */
	public void setNeedideal(Double needideal) {
		this.needideal = needideal;
	}

	/**
	 * NEEDIdeal을 가져옵니다..
	 * 
	 * @return NEEDIdeal
	 */
	public Double getNeedideal() {
		return this.needideal;
	}

	/**
	 * NEEDCloseness을 설정합니다..
	 * 
	 * @param needcloseness
	 *            NEEDCloseness
	 */
	public void setNeedcloseness(Double needcloseness) {
		this.needcloseness = needcloseness;
	}

	/**
	 * NEEDCloseness을 가져옵니다..
	 * 
	 * @return NEEDCloseness
	 */
	public Double getNeedcloseness() {
		return this.needcloseness;
	}

	/**
	 * NEEDSelfExpression을 설정합니다..
	 * 
	 * @param needselfexpression
	 *            NEEDSelfExpression
	 */
	public void setNeedselfexpression(Double needselfexpression) {
		this.needselfexpression = needselfexpression;
	}

	/**
	 * NEEDSelfExpression을 가져옵니다..
	 * 
	 * @return NEEDSelfExpression
	 */
	public Double getNeedselfexpression() {
		return this.needselfexpression;
	}

	/**
	 * NEEDLiberty을 설정합니다..
	 * 
	 * @param needliberty
	 *            NEEDLiberty
	 */
	public void setNeedliberty(Double needliberty) {
		this.needliberty = needliberty;
	}

	/**
	 * NEEDLiberty을 가져옵니다..
	 * 
	 * @return NEEDLiberty
	 */
	public Double getNeedliberty() {
		return this.needliberty;
	}

	/**
	 * NEEDLove을 설정합니다..
	 * 
	 * @param needlove
	 *            NEEDLove
	 */
	public void setNeedlove(Double needlove) {
		this.needlove = needlove;
	}

	/**
	 * NEEDLove을 가져옵니다..
	 * 
	 * @return NEEDLove
	 */
	public Double getNeedlove() {
		return this.needlove;
	}

	/**
	 * NEEDPracticality을 설정합니다..
	 * 
	 * @param needpracticality
	 *            NEEDPracticality
	 */
	public void setNeedpracticality(Double needpracticality) {
		this.needpracticality = needpracticality;
	}

	/**
	 * NEEDPracticality을 가져옵니다..
	 * 
	 * @return NEEDPracticality
	 */
	public Double getNeedpracticality() {
		return this.needpracticality;
	}

	/**
	 * NEEDStability을 설정합니다..
	 * 
	 * @param needstability
	 *            NEEDStability
	 */
	public void setNeedstability(Double needstability) {
		this.needstability = needstability;
	}

	/**
	 * NEEDStability을 가져옵니다..
	 * 
	 * @return NEEDStability
	 */
	public Double getNeedstability() {
		return this.needstability;
	}

	/**
	 * NEEDChallenge을 설정합니다..
	 * 
	 * @param needchallenge
	 *            NEEDChallenge
	 */
	public void setNeedchallenge(Double needchallenge) {
		this.needchallenge = needchallenge;
	}

	/**
	 * NEEDChallenge을 가져옵니다..
	 * 
	 * @return NEEDChallenge
	 */
	public Double getNeedchallenge() {
		return this.needchallenge;
	}

	/**
	 * NEEDStructure을 설정합니다..
	 * 
	 * @param needstructure
	 *            NEEDStructure
	 */
	public void setNeedstructure(Double needstructure) {
		this.needstructure = needstructure;
	}

	/**
	 * NEEDStructure을 가져옵니다..
	 * 
	 * @return NEEDStructure
	 */
	public Double getNeedstructure() {
		return this.needstructure;
	}

	/**
	 * VALUESELF을 설정합니다..
	 * 
	 * @param valueself
	 *            VALUESELF
	 */
	public void setValueself(Double valueself) {
		this.valueself = valueself;
	}

	/**
	 * VALUESELF을 가져옵니다..
	 * 
	 * @return VALUESELF
	 */
	public Double getValueself() {
		return this.valueself;
	}

	/**
	 * VALUECONSERVATION을 설정합니다..
	 * 
	 * @param valueconservation
	 *            VALUECONSERVATION
	 */
	public void setValueconservation(Double valueconservation) {
		this.valueconservation = valueconservation;
	}

	/**
	 * VALUECONSERVATION을 가져옵니다..
	 * 
	 * @return VALUECONSERVATION
	 */
	public Double getValueconservation() {
		return this.valueconservation;
	}

	/**
	 * VALUEHEDONISM을 설정합니다..
	 * 
	 * @param valuehedonism
	 *            VALUEHEDONISM
	 */
	public void setValuehedonism(Double valuehedonism) {
		this.valuehedonism = valuehedonism;
	}

	/**
	 * VALUEHEDONISM을 가져옵니다..
	 * 
	 * @return VALUEHEDONISM
	 */
	public Double getValuehedonism() {
		return this.valuehedonism;
	}

	/**
	 * VALUEENHANCEMENT을 설정합니다..
	 * 
	 * @param valueenhancement
	 *            VALUEENHANCEMENT
	 */
	public void setValueenhancement(Double valueenhancement) {
		this.valueenhancement = valueenhancement;
	}

	/**
	 * VALUEENHANCEMENT을 가져옵니다..
	 * 
	 * @return VALUEENHANCEMENT
	 */
	public Double getValueenhancement() {
		return this.valueenhancement;
	}

	/**
	 * VALUEOPEN을 설정합니다..
	 * 
	 * @param valueopen
	 *            VALUEOPEN
	 */
	public void setValueopen(Double valueopen) {
		this.valueopen = valueopen;
	}

	/**
	 * VALUEOPEN을 가져옵니다..
	 * 
	 * @return VALUEOPEN
	 */
	public Double getValueopen() {
		return this.valueopen;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((cultureid == null) ? 0 : cultureid.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Culture other = (Culture) obj;
		if (cultureid == null) {
			if (other.cultureid != null) {
				return false;
			}
		} else if (!cultureid.equals(other.cultureid)) {
			return false;
		}
		return true;
	}



	@Override
	public String toString() {
		return "Culture [cultureid=" + cultureid + ", applicantid=" + applicantid + ", compid=" + compid
				+ ", needharmony=" + needharmony + ", needcuriosity=" + needcuriosity + ", needideal=" + needideal
				+ ", needcloseness=" + needcloseness + ", needselfexpression=" + needselfexpression + ", needliberty="
				+ needliberty + ", needlove=" + needlove + ", needpracticality=" + needpracticality + ", needstability="
				+ needstability + ", needchallenge=" + needchallenge + ", needstructure=" + needstructure
				+ ", valueself=" + valueself + ", valueconservation=" + valueconservation + ", valuehedonism="
				+ valuehedonism + ", valueenhancement=" + valueenhancement + ", valueopen=" + valueopen + "]";
	}
	
}
